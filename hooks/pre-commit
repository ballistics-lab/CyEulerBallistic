#!/usr/bin/env python
import os
import sys
import subprocess
from pathlib import Path

def before_start(python_executable):
    print("Prebuild binaries")
    result = subprocess.run([python_executable, "-m", "pip", "install", "-e", ".[dev]"], capture_output=True)

    if result.returncode != 0:
        print(result.stdout.decode())
        print("Build failed. Commit aborted.")
        sys.exit(1)
    print("Done!")

def cleanup():
    root_dir = Path("./CyEulerBallistic")
    for path in root_dir.rglob("*"):  # Matches all files and directories recursively
        if path.is_file():
            if path.suffix in {".pyd", ".c", ".html"}:
                print(path)
                try:
                    os.remove(path)
                except IOError:
                    pass

def pytest(python_executable):
    result = subprocess.run([python_executable, "-m", "pytest", "./tests"], capture_output=True)
    if result.returncode != 0:
        print(result.stdout.decode())
        print("Tests failed. Commit aborted.")
        sys.exit(1)


def mypy(python_executable):
    print(python_executable)
    result = subprocess.run([python_executable, "-m", "mypy", "./CyEulerBallistic"], capture_output=True)

    if result.returncode != 0:
        print("stderr:", result.stderr.decode())
        print("Typings error. Commit aborted. ")
        sys.exit(1)


def main():
    python_executable = sys.executable

    before_start(python_executable)
    mypy(python_executable)
    pytest(python_executable)

    # try:
    #     cleanup()
    # except Exception as e:
    #     print(e)

    print("Pre-commit hook passed!")
    sys.exit(0)


if __name__ == "__main__":
    main()
